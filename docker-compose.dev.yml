version: '3.8'

services:
  backend:
    image: dittocs/backend
    container_name: 'backend'
    # build:
    #   context: .
    #   dockerfile: Dockerfile.backend
    ports:
      - '3000:3000'
    environment:
      - RDS_HOST=${RDS_HOST}
      - RDS_PORT=${RDS_PORT}
      - RDS_USERNAME=${RDS_USERNAME}
      - RDS_PASSWORD=${RDS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - NODE_ENV=production

    volumes:
      - frontend-build:/usr/src/app/client/dist
    # depends_on:
    #   - postgres-db

  frontend:
    image: dittocs/frontend
    container_name: 'frontend'
    # build:
    #   context: .
    #   dockerfile: Dockerfile.frontend
    ports:
      - '8080:8080'
    volumes:
      - frontend-build:/usr/src/app/client/dist
volumes:
  frontend-build:
#   postgres-db:
#     image: postgres:13
#     environment:
#       - POSTGRES_DB=${DB_NAME}
#       - POSTGRES_USER=${DB_USERNAME}
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - NODE_ENV=${NODE_ENV}

#     ports:
#       - '5432:5432'
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#       - ./dittoDB2.sql:/docker-entrypoint-initdb.d/dittoDB2.sql

# volumes:
#   pgdata:
